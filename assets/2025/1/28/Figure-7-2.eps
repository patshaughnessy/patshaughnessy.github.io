%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 562.000000 206.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 15.1 (Build 24B83) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 562 206
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 562 206
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Menlo-Bold
%!FontType1-1.0: Menlo-Bold 1.0000.2.0280
14 dict begin
/FontName /Menlo-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /s put
dup 34 /t put
dup 35 /underscore put
dup 36 /a put
dup 37 /b put
dup 38 /l put
dup 39 /e put
dup 40 /R put
dup 41 /H put
dup 42 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -913 1 index div -807 2 index div 1498 3 index div 2154 5 -1 roll div]cvx def
/sfnts [<




2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B1D
00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/H 1 def
/R 2 def
/underscore 3 def
/a 4 def
/b 5 def
/e 6 def
/h 7 def
/l 8 def
/s 9 def
/t 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-913 -807 1498 2154} readonly def
/UniqueID 4049746 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282915F131C0C1972474AA95A3C190204D99DA4DD48BE293602C24D34C9F267CDDA5ED3DDF1CDD8B83610D8A5AD0C73AEF3E93C2B3395FD2EAB12972060A40131ADE93EAB115684A74024158BDB3290E34AED08B0CFE7EDE69424267E5F3440670785C7B544A5CE73951C1197994A7FF9138376C643DAC3FDA826EC4315886040ED31B2DBC12FBD98F59FB038A1169B0E8358AF7DCF3637C7BE6FF4D1FC8F177C631D7E6FC1581A7A13C7AB84A55EE24D931BB6B6AE0E05CDE01B5BC12BC99724CEE0A6FBC4DAB9EA7AF62A8DDD886EAFA57F4C32F4FE595A1C182B4D2546B4270C966785EE3CAB38ECE2249B4E00A455E6D9CC4D86379A231FDAC086A8ECDBFEA232D0F61E49DDEC94EBF7DC97E15D3E6AB53432A27782986DAF716738D528D76B22DFBEA95DC3AFA22662F6D6C7962445DF5E7EBCFA1C62B363130787BBBA4E818C35B159ECDDF8E853D6C0C0451DF3F6ADFA077176DB9DE8A1EA1D4603FFE1826DC1C17C5C4F2AECF7F0331892973764383B2A003CB03CE97C838B2DF4E9F3B2878047D56C527C30251272D60CA7BB31940987F6A0E7FFEE0E30625B5FF608637292C4D1FC1072BB56A546BAAC81E93CD20F1321721697DCEA7C628F29B1E0B38190614435C4107C9469EF88993756D30495BCBC1F369668470B9E5707F5C91EABF242C2169D063FD98C17EF80557A9FF613CA77A2EA603A39D6CF22FAA23487E13FB92372C672F0B5CA2B23287631C02193FD9E8E9C9B1BEEED2FF5347F950D28CF6B
12190E61C5AAC47CCED34081DD1829E52424C4D4767DB81E8077D2BEA262CBC6209D8B3517075CE3A13E91465B5BA1F240E558FE5C6578C80908C1942D219EF48CDED70D59203540A29F5222CAF21E425CF1811CC20702F1C1DFADCA65D5AC029ACED3F7BAA696986E76E5D6923999F3A7A9FCB4F6D7409AB4B4852485F732CA8F36A059BA924ACFB7B91BF29F074A1BBA7356AC51AA8FBAD776BB4930D32603C8B52FF8ED8314D44F671BD1940F9B1EE66039111002928EB605D12213C87F99DFBE6A81EEEF15EDE64979223AF869E166E6CD2AD2AB60FC983FBCBED7E3F5B59200E85721927ED2D23263C48F8F90CF644F1A5AB3951ED9B1B7C9AA4668365DCDFA8AA1D3ACEB54A3A517992296F5F08E68DFD50FC77255E5920EFD5BDEE84624F374B9B068A32602C37513979481989C8FC4DA2F822D4906E1BFA2201925A892AE606F0A6885C4C018ED9989FD836E11E155EE441DDEE1517A508BAE2554C82ECF3D5500D692E040E46A3EB026F0342C79F9ADC6EF273A0A35E6ADEC5BAA755B92FDA63D31D865DC9278C75D4EE189098B2C9CDBA32991A4EE0F0518A23BCA9ECAC707A77621D47C844165D43483EF6A0C3D0BDAAA1DA58C35A1DB8F5652528D99D39607476C743A8CC689169B47BE83843347AB98EF23DFC1D85295EEE11089BAB63DD448B7678DBA82980EC23D919D99FDF993D0AE7652FE8B613D329B1C7BF4FFE52A1DD6EFA30C945B17ADD826B2D3F47DAFD91EBCAC6EC1BC2D49D71529E9AE32A0EDF413FB1DAB3439BBB958B1E25612B78ACF1F986E34F8735BA1D63471EB9D397BD5CEEBC128F8DF1E079FFFE227ED2409E6573FEC6B036DDB64E1168E02C8C081CF08A61C3E702C05329A9CB8EB4EC70F9E879C25786D01683D4CED55E341C9A0A70E85407AB2CD2854AD94FCE4DE1DB4748B33B77E2B831CFB78F52E56B0B14AA493AD0516E21896AF7ADC45C5EA21D24029FEFD91196C34323DC531E7C016E917A97B8D0BC04CA3A386C67963B1B5EC7CD4D8001494F1C92071CB1054A045426E3064A6A2A55B078419BA3B2D8D50B4A7E7F0C9EFB027E73DAC905B515A352C0EF27094B0F9082C141B0B0697656DB43F181061783FBAB7E24CFC17AF5EB9CA8A59377798D1468D989EB91B2192CE824A2F9F71797781C5EF8D5361F9CD52D3F5A289481560BB27C6AF1A12968400A6EA2CFEF08C7EB801BD094A1C723B4845C6E004E66276D3504E2CF9FFBD2CAB0B3A7FD1C0F626158D9B9F8E3DFB9166D0E4C96AC8A3B6776B73C347F88E01BD66DADB441D96FB208C35E0016AC8AF5135C45800DC4F62175B74CB6C94C2410BDB8B28A119156022E19F5DB1BF948427A07D75C2E7DF2FBEBC477EC33F702B885D77941C1019
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Menlo-Bold cguidfix
/F1.1/Menlo-Bold renmfont
%RBIBeginFontSubset: Menlo-Regular
%!FontType1-1.0: Menlo-Regular 1.0000.2.0280
14 dict begin
/FontName /Menlo-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /e put
dup 34 /n put
dup 35 /t put
dup 36 /r put
dup 37 /i put
dup 38 /s put
dup 39 /b put
dup 40 /u put
dup 41 /m put
dup 42 /underscore put
dup 43 /space put
dup 44 /equal put
dup 45 /one put
dup 46 /zero put
dup 47 /E put
dup 48 /c put
dup 49 /period put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -767 2 index div 1470 3 index div 2133 5 -1 roll div]cvx def
/sfnts [<

B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000D2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8000E2C2020456944B001602020457D691844B001602DB8000F2CB8000E2A2DB800102C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800112C4B535845441B2121592D0000020068FE96046805A400030007001FBC00040114000000060114B6010805830204002FC4D4EC310010D4ECD4EC301311211125211121680400FC73031BFCE5FE96070EF8F272062900000000010185000002E5019400030017B800082BBA00010000000B2B00BA00010002000B2B30310121112101850160FEA00194FE6C0000030085FFE3044C05EB000B0013001B00DFB800082BB8001C2FB8001D2FB80003DCB8001C10B80009D0B800092FB8000310B8000FDC410500EA000F00FA000F00025D411B0019000F0029000F0039000F0049000F0059000F0069000F0079000F0089000F0099000F00A9000F00B9000F00C9000F00D9000F000D5DBA001100090003111239B8000910B80017DC411B00160017002600170036001700460017005600170066001700760017008600170096001700A6001700B6001700C6001700D60017000D5D410500E5001700F5001700025DBA00190009000311123900BA000C0006000B2BBA00000014000B2B3031013212111002232202111012133212113427011613220211141701260268EFF5F5EFEFF4F4EF8E8B14FE244B8C8D8B1301D24C05EBFE7AFE82FE82FE7A0186017E017E0186FA98012E0136A585FD17A504C8FED2FECA8D7B02E785000100D00000044605D0000A0023B800082BBA00070001000B2B00B800052FBA00080009000B2BB8000810B80000D030312521110535253311211521010E013AFE880176CA0136FCC8A90468B5C2B2FAD9A9000000020058014B047903CB000300070017B800082B00BA00010002000B2BBA00050006000B2B30311321152111211521580421FBDF0421FBDF01F4A90280A90000000100C50000044E05D5000B002FB800082BBA00030000000B2BB8000310B80007D000BA0009000A000B2BBA00010002000B2BBA00050006000B2B3031132115211121152111211521C50376FD54028EFD7202BFFC7705D5AAFE6EAAFDBBAA0000010000FE9804C8FF420003000FB800082B00BA00000001000B2B30310515213504C8FB38BEAAAA000200C1FFE304580614000B001C0030401A180C09038C0F098C15990FBE1B9B1900121247180C06




00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/one 4 def
/equal 5 def
/E 6 def
/underscore 7 def
/b 8 def
/c 9 def
/e 10 def
/i 11 def
/m 12 def
/n 13 def
/r 14 def
/s 15 def
/t 16 def
/u 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1143 -767 1470 2133} readonly def
/UniqueID 4336582 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28298042BFC0D231F8B1B12E20417BFC4B622EE2640022E37E136108ED77A9A82BE429DABF7B440DAC3E546DD3A663A445E572D823AE5F56E03BA475F8309754E22DB50B67515B5D38AA8ECEEDE286ED288C809809DB0837D86E71D8D73FAAECC5C587B3F8C23E494B6D6F46CD07FDAF4E013868A782AE81C1B601156332EC4F55198C2937AF2D97C7DFC174FCD4DD97AC75EAF3538112621D48989280755F34949138C721ECABC7D71A5C0C63B4FCE2DEEE8E6A5C482FA617B04C263210F0CD15392ED71F8CE58E952729A5D688B81E27F5A85943E7A7E591EED459D4CAEC73597D87175584E6EE75C4C9E6DBCFDC96DCD92B565519661DC8DA007A2FF2476C2033B618A819B3CD1D57B17EBFC28D37892AFDC8F3CFA827FCA574D2DCE696C36B8064421C209337E61C88E82A78C5AC66C91246B724E1C36AE2D18795EE5C106AEDCA994856BA5922C865A8ABBA8788546CF34194A63D0F311AE0787298E8C5D172635D96E8659EDD70B4688F425D9460563C600B6C2B0FA87F21095E1D587AD40B7F6F51F6586070AEE2FCD4A66D39518A62240B293404009ED9E7A0D12EA627F4749B786417ECCD326E96B87B1EFA7971D82BA39540E5DB66CD03B248E1600AB294B692C32E036565788D5BF86AF5CE615D5483705D69D810AF33A88B63060D6D8536FB1E61CAE8C460818716A14598F580B20B52ADEACD6047B8683A9B66B5AFC6D919769920739D6238DB5D2A61191EFE6A3EAB8B2A4A9D3A72BEC7111AA6A69D314
A7896E9E523DDA2C8D4C6717F7A87AC7175059B2054F32BE01E0C102ACF751EAAED094D2A64BB1C7C9185FC47394E342788C253576D6CB3394AF181888498F2F41E65F86F2056F62D1E50021C8D3B2DCFFFF7FF79C20111B5E017DE8CE36E4B843F65910A57F7252BBD89B007063E3FB4F3A22F2C1539653DB6F1E9179E815DE0E90E678323BF9D2B8D8E98A038E96E2AA19C918455AAF3CF9376EA97D942F5AF050A4E325B341B94EEF178FE8C68BD62B481465E5C33C94D928CF573485AADE3A6690BBC3C09D0C69D0425AC6386A03FD49EFDED66C7B4E35C807DF43A03DBA4625A83755F45B15398FE947982540AA3267A79F6D4DEEC139BF45D1188629FB2F4D1A50C1FF0A58AF1EC7FE72A76983375F0D1BACC3D79577155EEA49A23FEC6441293FF46A4580D2C071C60CD99B42D2DD23B6B5E0683FAD1720162F8D15C10FCBD3E2D8CECA312C64FBD43E0F40FC3BDD146BCC2501A00BF9AED527298105B577C714DB078F0E7DD81442F2FB3D7745386EDD546C93D1EE038FBEA3336A30C8C517538E4E411B651E3A6192D3067DA150166803960C6389D2DCD4039C4D1365CD72D201271DDEB6A80AEFAAB92D411061DE5AC960C210AB608A1C0CC8DB4DCF90BE2ED0F619F7DFB9529557788C556F12C057ECDF3E79F5381EEB5E43E39E525C14425F56DA728AE48E4C4B6CA30FEF9A2974495554CEC207E675FA1212492513BE75F84FF921E07469DEF9AC411F5EC2631B91B3E2DCBBFA5F4E03DEC8413CA0A3D97811EA52DE9AA6E30DE9896084763206E537A80CEE1E08D9B703F71754DA28DE815CF28594F63B27D53674B0585728E1B815D3508E13D088881603F94F01059C8F5B06D7B34A1122AE4B3BE577B18B70E405A8BA707E7FA2F50219BD6939228E57345D99E8D9355F384D5413C3B98F0EA7826A20E73CB774F232DAB455C0BD475E10ECD0D6A81CBEA7848ABB27CD41F2B49868BB38357EC24FDF4D46E19E09EC55B27C41DE95BCF7CAED25571F7DED2EDDCA85CCEEAD00E437917F266013CB6476F0B112AD43EFC8034E9E6BF90DEDD07CDE9EF3A0BAB0D569680EB1CA100491705252914254C67D1B76DB8659394513EDA0BF4088CF27400761DD23A0CA12B83948DA7B9824E3FA0F62604D6132556E56A7880549497D1E908FC7AA6D07C1E1A1F9211FFD3311F4110488FA91456E5D12D3821A47A54C212024ADAF1E2588B8F91F2503E5A6552359512B021E4C3416D41608AA951A33A2D16364B8EDE06A01A39FC32E030EB00FCAF3575B41D1BCAC7214742B5BE1CC472EA54620133E3386A9FDBAD7F7C7DEA6D763C496E47570E1109B20AFC4B36D176070931139572D3FF07575074E8F47F75B8184F2A1409D2DAE44762FA71A559491949D98388255EF0D1BAE2E24422B5401D803655E7CA0D3083CB148C8C42BA7FA654775
672B46CCB2934F75CE9EC9B690E4481B9676EE157C9F383275F4033B005FFE6485984F8CBEF79EA876472A0CE932078993952DC9A5B29825377374FB62D06E18AC395BF6047AD3986424A3C4646D95A88B1B65FFD2DD4DA090743A405B15CF27B2FD95709CCDD08821CD0EF749E2D97C3E7683A6944DE282F63CAB7FECBD7D8371B8B32164167A08F89573328075BD3F7E8AAF3D14D68F393888AAB32833806DBE478962488D04CDAC016E067EE47B18BEF5532D01B5E80A79680834B93DA2D6D725E23AB5390E73C3AFCBE10440F7A309F3F46A17B0DDB5B7D9B90CEC64CBAB5D7174152B6F88E5F53E77F3E526DC817F1C4F8D3A4E70BAB88FF5809791A7EACAB22EDC0087BC38008855F4B2998197B6E5D2A451B356D4B9D040C0A82205727893C0B94BF552A7D5889555F2110012FA709493A86A4971E589059C8E9F47A0E96086B11C7BF765130D2A0F9D75DCD8DF80D98420A5EAEE1B9AD6459DA124FD35FF2AD111DE34BB16D3EC44E1280031CDAC49B6989C2C2AA6C2499F0CF3A67427895DE39103DB4A546F5A0DB01E38B5543252716BD13EA2E903350CA6C34483075F3A285C5A2E05501D14FA14FF617773BF3316D3D77630075978CECD965091B7EE47726F4993B0E11F036C5F690BB7CFB5A04A7C088E7C76CA8CD10633BB093FFCC5AD4B212BDB910E86C859EB68BA741F3CD71BD8F69630FA0A945F905090EAB9D780AD5CF4401564EFFE8C6FB28FC5E8D2C2B053D07BB21D40AB44A4921C13C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Menlo-Regular cguidfix
/F2.1/Menlo-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /colon put
dup 34 /k put
dup 35 /e put
dup 36 /y put
dup 37 /space put
dup 38 /equal put
dup 39 /greater put
dup 40 /quotedbl put
dup 41 /v put
dup 42 /a put
dup 43 /l put
dup 44 /u put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



001C08B1FC49FE8007C300010000000000000000000000000000000D01F400330116000001AA006D01160053025800300258002E02190024021900240207004500DE0045022C004001F4000E01F40008000000480048007200A000BE00DA01E4024C027E029802E80308037200010000000D0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/space 1 def
/quotedbl 2 def
/colon 3 def
/equal 4 def
/greater 5 def
/a 6 def
/e 7 def
/k 8 def
/l 9 def
/u 10 def
/v 11 def
/y 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4399364 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282933C176504523007CAA62118EF0F10F542CCD149F7422676A4BF6B9CF67846904C2F053F05F37B6A8FC0544F06B97B7DA651098C9493AF5A4F445A8D544ABDBAE219D7765D876E06E4B9E22C62C2720E41332ECD4248017951E9C760D168319BD8AF0748A59CADF95AFC087DBDA6C7C24CE1AECB948283D83E8D12DC48052610FF47868C118FDB976B3663FD1A73FA0FFB17F7C8F10DC93CC6E84B1A66235CCD52DFE2688F462FD0EED3E486B28961866FCA425C4C16FEF5880FA579AD0E6D2ADE6BEFD84207CC513AAFE96EEA6C6BB680E130C3FBE2D244D4BF3FC67EDAA1D5509682D4786A40138E4471DCA455EFC6125F13433B997F3BF4A5F39EBAB98402CDD8D48119AACF324F10100AB1172E2DD61EDF0AC789D6C9837232002AD5EBB87F29A93BD22B4A42AB6E97C7FB8917DEC37BC5006A6D170C37BF1B106BAF053EFF46EF3C7DB831933B46DAF9684A65E410543F1358F9B0A413094FBBF9D776BE9D6CD0DAAABD6164F97A6EEE76B5FD4BC6ECA0755F95956184E8410446A429A46A14006EA170F2815DCD71CA21A5E0E482A530D9C63DDEA797BA97CAA91738446E469E44D19E9B2503C3F688738DCE82B1C85887EF6A04BFAFBD3B13C39D678285EB4314D5B569E38DD0EC9EE73FB7B255D1B5D4BAB19A7086A8B9D1BD1EF8584132232968019A3DAD7D47F83CEE15689AACD474CB574AE1558C1F43ECD59480AB741D6D0701E5C9CA1C3CAC2C7866697CE767F819D95617BC0CC075144068FFEB7C43
FD573D1303169420713D3DDB19B674B916E4BFF529F44198F20279CB56B745335D2409216CF3D41F2151040175104C2EC078B4145630F04D520C0C7E0A0E18F4BA312F47B60C77FC45826325F36F251AA59F90F7562CCF955F608C35C050698BFBF03292CD1AA9B3D6962E9F922CFA9A58382DF252E5C52F1559AA42B0D1D8F5403148C0AB7E50D6F0452222655D9EFB7E9B9BF205B40E83A100B8470056A8E29E15F2829AA3DD9C6425C453F1D236D7EE33A056A0D6F33D8DEB3E062578FAF032D38C7BF9BCC67A61A67FD2CC3026EEA2B234D7C4FBAB2FBCB598DA7FC2C980E16E77F7A489D514B6164B6AED86D701BA6D813D230680016FF47F842C4CFC2ED0D4FA113DDA9392B28E35B43D46A32F9607FFCD7125DC4EA407B4AD17AC147BE30EDD351AEBCF0E3F84F742472AAA1C9094297A90EB187F546AE1758A6D2E43D9C77122C57DC1DEEFB149264490C34DCFA0674FD0721D5BE21C37A7FDC14AE9280E993B89202B6BEC8E200D529F62D8A0BACF9487C1A5E8476DBDE7BD02053CB3D7CDBA630182A7808994048D247E9E43DEB1AB19AC5CBEE98065B30FC4F01525D937EF317E313B538B1471B8EC0003F4E42E0D071AC6F39F6F15ACCE6D039A42F6E5542B8ABB7FCA5C8A0AEE35B3E374A47C5BB55A07686DD8F0942DC025FC129BB464B9D9FE36393FBC5BD8F7849C4704F295926E075FBEBA2AA5B5A7412AF20ACE46F054A2A09B275650812102D6327DED3FFEEE1059F13D35F8D3A8C7AC3676D4110AB9817C3311BE879E8D59EA7102CA7868E86C8650FA9734DE489084C0BA55A75AC107457C2F3D93317347284E500B479CEB767E0CD4C33C1F66AFD11B04730F8DA257DC48F3675AB486539B08196B9823D7C7CD1D13B69D1B421EFC2A5A02F6D9F8AD61D3D82D912CBDDC28CD39393C2DD4147921924706B0D4E446B270B9242AB4FCAC1D1F10CADA8EE502F3D53E6628961402AB9E3B033624DF994A7ED2B2F2E27874C7F4CE041976D7B8AA19FFF98857DB5376DFE16EE454FD39A55F31457E5DC3CE5EA1B93A5CFB82224F1A0DECC19942E6808BED2A637E847726C13D6BD27EA7038E5DE09DDDD276A6ABC53B78DF2435D28207DAEDF3CE3428F36631A25A91354A6C44FBFEBD580BA007031E7BCAA0B640DF975F4A989EC061F42B3D461B5AAB644B337BABCD411BB0C4255B8383DE7F6FB6EDAC45E8CD49C863A68FD229D2F0ACD624D5AC490263B8D081
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F3.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 562 206 rc
0 206 m
562 206 l
562 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1671.7971 1889.2463 m
3825.3044 1889.2463 l
3825.3044 -2077.4204 l
-1671.7971 -2077.4204 l
h
-1671.7971 1889.2463 m
f
172.92545 204.64426 m
293.92545 204.64426 l
298.896 204.64426 302.92545 200.61482 302.92545 195.64426 c
302.92545 93.978188 l
302.92545 89.007622 298.896 84.978188 293.92545 84.978188 c
172.92545 84.978188 l
167.95488 84.978188 163.92545 89.007622 163.92545 93.978188 c
163.92545 195.64426 l
163.92545 200.61482 167.95488 204.64426 172.92545 204.64426 c
h
172.92545 204.64426 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
438.92545 927.35571 m
559.92542 927.35571 l
564.896 927.35571 568.92542 931.38519 568.92542 936.35571 c
568.92542 1038.0219 l
568.92542 1042.9924 564.896 1047.0219 559.92542 1047.0219 c
438.92545 1047.0219 l
433.95486 1047.0219 429.92545 1042.9924 429.92545 1038.0219 c
429.92545 936.35571 l
429.92545 931.38519 433.95486 927.35571 438.92545 927.35571 c
h
438.92545 927.35571 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
434.92545 943.35571 m
(!"#"$%&')[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
474.13931 1034.91 m
(!"#$%!&)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
484.97623 1005.684 m
('%"&)[ 7.224609 7.224609 7.224609 0.000000 ] xS
445.24088 976.45782 m
("\(\)*!"#$%!&+,+-)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
10.203218 189.40411 m
112.20322 189.40411 l
117.17378 189.40411 121.20322 185.37468 121.20322 180.40411 c
121.20322 133.40411 l
121.20322 128.43355 117.17378 124.40411 112.20322 124.40411 c
10.203218 124.40411 l
5.2326546 124.40411 1.2032175 128.43355 1.2032175 133.40411 c
1.2032175 180.40411 l
1.2032175 185.37468 5.2326546 189.40411 10.203218 189.40411 c
h
10.203218 189.40411 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
276.20322 942.59589 m
378.20322 942.59589 l
383.17377 942.59589 387.20322 946.62531 387.20322 951.59589 c
387.20322 998.59589 l
387.20322 1003.5665 383.17377 1007.5959 378.20322 1007.5959 c
276.20322 1007.5959 l
271.23267 1007.5959 267.20322 1003.5665 267.20322 998.59589 c
267.20322 951.59589 l
267.20322 946.62531 271.23267 942.59589 276.20322 942.59589 c
h
276.20322 942.59589 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
272.20322 958.59589 m
(\(\)$!*)[ 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
319.97861 988.78717 m
(&#)[ 7.224609 0.000000 ] xS
2 w
0 j
0.60000002 i
/Cs2 SC
0 0 0 sc
337.08945 985.85199 m
417.02545 985.85199 l
S
0 i
CM
160.62544 146.14804 m
151.02544 149.74805 l
151.02544 142.54803 l
h
160.62544 146.14804 m
f
0 J
1 0 0 -1 -266 1132 cm
426.62543 985.85199 m
417.02545 982.25195 l
417.02545 989.45197 l
h
426.62543 985.85199 m
S
1 w
1 J
0.60000002 i
429.92545 958.23071 m
568.92542 958.23071 l
S
430.82544 985.59259 m
569.02551 985.59259 l
S
430.92529 1017.9101 m
569.02551 1017.9101 l
S
0 i
1 1 1 sc
CM
320.62466 138.95259 m
342.63403 138.95259 l
342.63403 120.54475 l
320.62466 120.54475 l
h
320.62466 138.95259 m
f
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
586.62463 993.04742 m
608.63403 993.04742 l
608.63403 1011.4553 l
586.62463 1011.4553 l
h
586.62463 993.04742 m
S
0 i
1 1 1 sc
CM
342.63403 138.95259 m
364.64337 138.95259 l
364.64337 120.54475 l
342.63403 120.54475 l
h
342.63403 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
608.63403 993.04742 m
630.64337 993.04742 l
630.64337 1011.4553 l
608.63403 1011.4553 l
h
608.63403 993.04742 m
S
0 i
1 1 1 sc
CM
364.64337 138.95259 m
386.65274 138.95259 l
386.65274 120.54475 l
364.64337 120.54475 l
h
364.64337 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
630.64337 993.04742 m
652.65277 993.04742 l
652.65277 1011.4553 l
630.64337 1011.4553 l
h
630.64337 993.04742 m
S
/Cs1 SC
0 sc
0 i
638.03577 1006.2513 m
(.)s
/Cs2 SC
1 1 1 sc
CM
386.65274 138.95259 m
408.66211 138.95259 l
408.66211 120.54475 l
386.65274 120.54475 l
h
386.65274 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
652.65277 993.04742 m
674.66211 993.04742 l
674.66211 1011.4553 l
652.65277 1011.4553 l
h
652.65277 993.04742 m
S
0 i
1 1 1 sc
CM
408.63403 138.95259 m
430.64337 138.95259 l
430.64337 120.54475 l
408.63403 120.54475 l
h
408.63403 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
674.63403 993.04742 m
696.64337 993.04742 l
696.64337 1011.4553 l
674.63403 1011.4553 l
h
674.63403 993.04742 m
S
0 i
1 1 1 sc
CM
430.64337 138.95259 m
452.65274 138.95259 l
452.65274 120.54475 l
430.64337 120.54475 l
h
430.64337 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
696.64337 993.04742 m
718.65277 993.04742 l
718.65277 1011.4553 l
696.64337 1011.4553 l
h
696.64337 993.04742 m
S
0 i
1 1 1 sc
CM
452.65274 138.95259 m
474.66211 138.95259 l
474.66211 120.54475 l
452.65274 120.54475 l
h
452.65274 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
718.65277 993.04742 m
740.66211 993.04742 l
740.66211 1011.4553 l
718.65277 1011.4553 l
h
718.65277 993.04742 m
S
0 i
1 1 1 sc
CM
474.65274 138.95259 m
496.66211 138.95259 l
496.66211 120.54475 l
474.65274 120.54475 l
h
474.65274 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
740.65277 993.04742 m
762.66211 993.04742 l
762.66211 1011.4553 l
740.65277 1011.4553 l
h
740.65277 993.04742 m
S
2 w
0 j
518.87463 1001.5474 m
573.72467 1001.5474 l
S
0 i
CM
317.32465 130.45259 m
307.72467 134.05258 l
307.72467 126.85258 l
h
317.32465 130.45259 m
f
0 J
1 0 0 -1 -266 1132 cm
583.32465 1001.5474 m
573.72467 997.94739 l
573.72467 1005.1474 l
h
583.32465 1001.5474 m
S
1 J
0.60000002 i
499.03595 1041.2 m
499.03595 1084.6042 l
S
0 i
CM
233.03595 37.795753 m
236.63596 47.395752 l
229.43594 47.395752 l
h
233.03595 37.795753 m
f
0 J
1 0 0 -1 -266 1132 cm
499.03595 1094.2042 m
502.63596 1084.6042 l
495.43594 1084.6042 l
h
499.03595 1094.2042 m
S
1 1 1 sc
CM
288.18314 34.495754 m
396.80841 34.495754 l
396.80841 1.0000374 l
288.18314 1.0000374 l
h
288.18314 34.495754 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
554.18317 1097.5043 m
662.80841 1097.5043 l
662.80841 1131 l
554.18317 1131 l
h
554.18317 1097.5043 m
S
0 i
1 1 1 sc
CM
179.55786 34.495754 m
288.18314 34.495754 l
288.18314 1.0000374 l
179.55786 1.0000374 l
h
179.55786 34.495754 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
445.55786 1097.5043 m
554.18317 1097.5043 l
554.18317 1131 l
445.55786 1131 l
h
445.55786 1097.5043 m
S
/Cs1 SC
0 sc
0 i
/F3.1[ 12 0 0 -12 0 0]sf
459.10651 1118.0841 m
(!"#$%&'%\(\)*+,#\()[ 3.336000 6.228000 6.444000 6.000000 3.336000 7.200000 7.200000 3.336000 5.112000 6.000000 6.444000 2.664000 6.672000 6.444000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
396.80841 34.495754 m
505.43369 34.495754 l
505.43369 1.0000374 l
396.80841 1.0000374 l
h
396.80841 34.495754 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
662.80841 1097.5043 m
771.43372 1097.5043 l
771.43372 1131 l
662.80841 1131 l
h
662.80841 1097.5043 m
S
/Cs1 SC
0 sc
0 i
/F2.1[ 9 0 0 -9 0 0]sf
790.35687 1004.7 m
(/#0111)[ 5.418457 5.418457 5.418457 5.418457 5.418457 0.000000 ] xS
790.35687 1117.2682 m
(/#0111)[ 5.418457 5.418457 5.418457 5.418457 5.418457 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
496.67148 138.95259 m
518.68085 138.95259 l
518.68085 120.54475 l
496.67148 120.54475 l
h
496.67148 138.95259 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -266 1132 cm
762.67145 993.04742 m
784.68085 993.04742 l
784.68085 1011.4553 l
762.67145 1011.4553 l
h
762.67145 993.04742 m
S
ep
end
%%Trailer
%%EOF
