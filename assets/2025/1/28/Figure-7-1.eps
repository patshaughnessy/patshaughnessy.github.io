%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 562.000000 205.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 15.1 (Build 24B83) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 562 205
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 562 205
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Menlo-Bold
%!FontType1-1.0: Menlo-Bold 1.0000.2.0280
14 dict begin
/FontName /Menlo-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /s put
dup 34 /t put
dup 35 /underscore put
dup 36 /a put
dup 37 /b put
dup 38 /l put
dup 39 /e put
dup 40 /R put
dup 41 /H put
dup 42 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -913 1 index div -807 2 index div 1498 3 index div 2154 5 -1 roll div]cvx def
/sfnts [<

2653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800112C4B535845441B2121592D000000020068FE96046805A400030007001A400C04BE0006BE010805620204002FC4D4EC310010D4ECD4EC301311211125211121680400FC73031BFCE5FE96070EF8F2720629000100890000044805D5000B00264014087002800400640A0607030F051F09010F00220C10FCEC32FCEC3231002F3CE432F4EC3013211121112111211121112189012701710127FED9FE8FFED905D5FDC70239FA2B0298FD6800000000020085000004D105D50014001D006640360A090807040B06030403050404032506040016030416700A15700E640C0400050303121D170A06040F1A0B041A21121F150B0F0D221E10FCEC32FCECC4111239173911173931002F3CF4ECD4EC123912391239304B5358071005C9071005C91117395922011E01170121032627262B0111211121201615140601113332363534262303272C412F010EFEBCB4080D4F6B5EFED901AA0120FB96FDF88B7969687A02C109415EFDE70179101CA9FDB205D5CCE69AB6020AFE695F6D6D5E000000010000FE7A04D1FF420003000FB800082B00BA00000001000B2B30310515213504D1FB2FBEC8C80002005EFFE30454047B000A00250085402F090600191F170E0C060B0067170667111F68208A1C672389117217850C00231C170303180D09160B2E1F031614292610FCECCCFCEC32321117393931002FE4E4F4ECF4EC10EE10EE3911123911123911123930402D341E301F3020342175027215721688008801880A81158116A000A001A009A00AA614A615A015A016A017A018165D0122061514163332363D01251121350E01232226353436213335342623220607353E0133201602BCA4825A4D74800123FEDD35A664BFD5FE010ACB676469C56B61C8700111DD020E54664C5AAF9D1471FD817D4A50CAB5C4BB314749353AFA2826DE0000020096FFE304770614000B001C0036401D0C0F0318190903680F096815720F891B741900161232180C06161A301D10FCEC3232FCEC31002FECE4F4EC10EE11123911123930013426232206151416333236013E01333212111002232226271521112103526C5F5F6E6E5F5F6CFE68368F5AC7D7D4C065962EFEDC0124022DA2B8B8A2A2B8B802365D5DFED0FEE4FEE8FECC6261A60614000002005CFFE3047D047B0014001B004C40230C150D148B00158F0D11680079030D8E1868098903721C1516000C2E0E161B1606291C10FCECECFCC4EC310010E4F4ECEC10E6EE10EE10EE11123930400BCF0CCF0DCF0ECF15CF1B055D250E012320001110003332001115211E0133323637032E0123220607044E66D476FEE7FED7011EF7F90113FD09019A9965C46BF802737065


2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B1D
00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/H 1 def
/R 2 def
/underscore 3 def
/a 4 def
/b 5 def
/e 6 def
/h 7 def
/l 8 def
/s 9 def
/t 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-913 -807 1498 2154} readonly def
/UniqueID 4049746 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB282915F131C0C1972474AA95A3C190204D99DA4DD48BE293602C24D34C9F267CDDA5ED3DDF1CDD8B83610D8A5AD0C73AEF3E93C2B3395FD2EAB12972060A40131ADE93EAB115684A74024158BDB3290E34AED08B0CFE7EDE69424267E5F3440670785C7B544A5CE73951C1197994A7FF9138376C643DAC3FDA826EC4315886040ED31B2DBC12FBD98F59FB038A1169B0E8358AF7DCF3637C7BE6FF4D1FC8F177C631D7E6FC1581A7A13C7AB84A55EE24D931BB6B6AE0E05CDE01B5BC12BC99724CEE0A6FBC4DAB9EA7AF62A8DDD886EAFA57F4C32F4FE595A1C182B4D2546B4270C966785EE3CAB38ECE2249B4E00A455E6D9CC4D86379A231FDAC086A8ECDBFEA232D0F61E49DDEC94EBF7DC97E15D3E6AB53432A27782986DAF716738D528D76B22DFBEA95DC3AFA22662F6D6C7962445DF5E7EBCFA1C62B363130787BBBA4E818C35B159ECDDF8E853D6C0C0451DF3F6ADFA077176DB9DE8A1EA1D4603FFE1826DC1C17C5C4F2AECF7F0331892973764383B2A003CB03CE97C838B2DF4E9F3B2878047D56C527C30251272D60CA7BB31940987F6A0E7FFEE0E30625B5FF608637292C4D1FC1072BB56A546BAAC81E93CD20F1321721697DCEA7C628F29B1E0B38190614435C4107C9469EF88993756D30495BCBC1F369668470B9E5707F5C91EABF242C2169D063FD98C17EF80557A9FF613CA77A2EA603A39D6CF22FAA23487E13FB92372C672F0B5CA2B23287631C02193FD9E8E9C9B1BEEED2FF5347F950D28CF6B
12190E61C5AAC47CCED34081DD1829E52424C4D4767DB81E8077D2BEA262CBC6209D8B3517075CE3A13E91465B5BA1F240E558FE5C6578C80908C1942D219EF48CDED70D59203540A29F5222CAF21E425CF1811CC20702F1C1DFADCA65D5AC029ACED3F7BAA696986E76E5D6923999F3A7A9FCB4F6D7409AB4B4852485F732CA8F36A059BA924ACFB7B91BF29F074A1BBA7356AC51AA8FBAD776BB4930D32603C8B52FF8ED8314D44F671BD1940F9B1EE66039111002928EB605D12213C87F99DFBE6A81EEEF15EDE64979223AF869E166E6CD2AD2AB60FC983FBCBED7E3F5B59200E85721927ED2D23263C48F8F90CF644F1A5AB3951ED9B1B7C9AA4668365DCDFA8AA1D3ACEB54A3A517992296F5F08E68DFD50FC77255E5920EFD5BDEE84624F374B9B068A32602C37513979481989C8FC4DA2F822D4906E1BFA2201925A892AE606F0A6885C4C018ED9989FD836E11E155EE441DDEE1517A508BAE2554C82ECF3D5500D692E040E46A3EB026F0342C79F9ADC6EF273A0A35E6ADEC5BAA755B92FDA63D31D865DC9278C75D4EE189098B2C9CDBA32991A4EE0F0518A23BCA9ECAC707A77621D47C844165D43483EF6A0C3D0BDAAA1DA58C35A1DB8F5652528D99D39607476C743A8CC689169B47BE83843347AB98EF23DFC1D85295EEE11089BAB63DD448B7678DBA82980EC23D919D99FDF993D0AE7652FE8B613D329B1C7BF4FFE52A1DD6EFA30C945B17ADD826B2D3F47DAFD91EBCAC6EC1BC2D49D71529E9AE32A0EDF413FB1DAB3439BBB958B1E25612B78ACF1F986E34F8735BA1D63471EB9D397BD5CEEBC128F8DF1E079FFFE227ED2409E6573FEC6B036DDB64E1168E02C8C081CF08A61C3E702C05329A9CB8EB4EC70F9E879C25786D01683D4CED55E341C9A0A70E85407AB2CD2854AD94FCE4DE1DB4748B33B77E2B831CFB78F52E56B0B14AA493AD0516E21896AF7ADC45C5EA21D24029FEFD91196C34323DC531E7C016E917A97B8D0BC04CA3A386C67963B1B5EC7CD4D8001494F1C92071CB1054A045426E3064A6A2A55B078419BA3B2D8D50B4A7E7F0C9EFB027E73DAC905B515A352C0EF27094B0F9082C141B0B0697656DB43F181061783FBAB7E24CFC17AF5EB9CA8A59377798D1468D989EB91B2192CE824A2F9F71797781C5EF8D5361F9CD52D3F5A289481560BB27C6AF1A12968400A6EA2CFEF08C7EB801BD094A1C723B4845C6E004E66276D3504E2CF9FFBD2CAB0B3A7FD1C0F626158D9B9F8E3DFB9166D0E4C96AC8A3B6776B73C347F88E01BD66DADB441D96FB208C35E0016AC8AF5135C45800DC4F62175B74CB6C94C2410BDB8B28A119156022E19F5DB1BF948427A07D75C2E7DF2FBEBC477EC33F702B885D77941C1019
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Menlo-Bold cguidfix
/F1.1/Menlo-Bold renmfont
%RBIBeginFontSubset: Menlo-Regular
%!FontType1-1.0: Menlo-Regular 1.0000.2.0280
14 dict begin
/FontName /Menlo-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /e put
dup 34 /n put
dup 35 /t put
dup 36 /r put
dup 37 /i put
dup 38 /s put
dup 39 /b put
dup 40 /u put
dup 41 /m put
dup 42 /underscore put
dup 43 /space put
dup 44 /equal put
dup 45 /zero put
dup 46 /E put
dup 47 /c put
dup 48 /period put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1143 1 index div -767 2 index div 1470 3 index div 2133 5 -1 roll div]cvx def
/sfnts [<





0300100301B80164858D012B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B1D00
00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/zero 3 def
/equal 4 def
/E 5 def
/underscore 6 def
/b 7 def
/c 8 def
/e 9 def
/i 10 def
/m 11 def
/n 12 def
/r 13 def
/s 14 def
/t 15 def
/u 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1143 -767 1470 2133} readonly def
/UniqueID 4336582 def
currentdict end
currentfile eexec

38ECBCDA6BCBC408D3CF0D82B8F344B4EFC8DB903F76AC33135382CA2CD0E1C36D76C0144C8E76896937AEF5A53AADD0DE90768D3A3DA8AE9FB523AF553C9E04718034D274F5F91F17DB6FA2957231B7F6271494736B1864C9C5F6296512F81D9D51C21DD99BF1AB9561236037E3F4C829D209F6D2B0322BE74CB4B0A6676A2CB47ADF076DC9478577EFA384C91EA52563A210EE0CEE5C06C6996250B7BF803202FCDEB8436E2442873900370EA134674EA6B9A6CC3EFAD05690519C738A2C9DFC0E9A01597CC9FF8BC192AE6F0262CEA8D12C07B18AD96DA247960A582A14A9CFE5F371188A66C1356C6F7F2F70D48FB5B2A83EDF02989732CD70110DE66B3A3549552E84B5EA3F36F42D04BCAF991616E3E547F8C2D56D5E7A0B0351066A5393BC041A23FDFF2057D29C9118303C6DFFDAB55DE587BC19055D09BC5D66EE3EC42E58C058290D4C3E16FAA7393167E44A6F0D12ABD2919DB1ABB2F5A98E37172F4B0D64B246542F77F3093C238190E62A4EEC239D66C5038218102BFCD343B76B60E0D8FA62B4AB34083E0FA45131CA9BA175DDD6487C24A247B0AF98864B15959889AF5E9F3896681E54EC78E553522835C236DEAA5FBC8190245643703AA4295007C1685C8F7F686324F38D94EE5FE82424FBD860E6C0B0E4B6D8FEF63511C0D791B68003E4A23D4867C3D83CA4E606BA9C6338C43E4C2E5F8AB0426854451684213741B7CE5E9290D496072C9A29740E633DAD4B93A38236C0B4D4910C2C3CF9376057FA12F2E4DB81F6673B4E6719B841BFC3EED57A6625EE37D2F235E6F8C00915136B6C8F24FFB552ECB3509C7199C487383FB3B70D4CDD64FB34FD0380A2742E289FA53456E2B8FA983FEBE656AF00D4721810B991F40F3BD1062E85A64714B4639D728D3CCD7CF57A53891E7B5D7BF91F9A75706D612EA6A86B14375420CA95AF9EC15056313613F417B0859E2AD1647CE11FB4803883B2F7B69336581DF3788C5654D893B0FBAC7F3AE405DD6944727F715AB061BB33ED2D5571C441812D48E2913B70AC8DB9B40F1A59C3D4BD42EE9CC069A8BEE7DC5C4D6578636294ABA4EDE494A1B318E5289043E87656F7A5BEF8764B3C08E7705B8B255DBEA9178DAA927D2513454A152710FDE09EC22CCB2AB0161AFF6B33C734AAA06F8201491ED368F389AC2FCEE47A98949F2D02DCBDEBF0FE69F11E25A437B5FEF23B20881763A87695FEDE1E3B8BFE2CEDBF725F085CCBEA5790A046A2CE0F7B91F48E697CE8138B42884EE3385D374C4EFE07740F3A1C23E414710E6644A8796D519C1398AEAF6CE888B2AEA3B14019A067168F6995E26DE0C5E0A5EE1090167DD0D3D07BAE959EDB1C0537B48239912E46D2D9E423ED67B0995C515D81CAF746E3BAC5FAC042EA969BD21EE4824ECEA121F9BA79DA2AF4FDFAF7A663C377E04C8D
8AC1BC8722DBE5FF3D1CA3882A97FE7B166D69C9834904B20A4AFB677ECE6619D54368CEC0BD24BDF64767362046E1F9EA49D60DF0C943E651EBAC6A34C1D4C8D62ED6CEF9C8E3867EB4B61B35B51C171647300933004DD32A1EA1DE15EFBB3ED2CCD3A0B67026B440E53177EC77EDE8F336C129BCC58E7098AEAB5F1556ACFDC4CFC81CBC72073B37827A95F56A30D25525E3CC68BF6DC8B43FE47475D29A6E0AA4FD3F4C488D3B0F854BB7D48B7302A5A05833692CBDBCDB3792972020968B00C08127A874D5A34E7E5F38ECBD0A36E979186E557FEC256E26044A345A0269B85A445E8E588406E73FBB73EA89AAB9749643BCF102B0136473F0D1A27B08AFAE4220460AD68561710126E0515014F9CDC3977326B797596F056D46E15D538A85F11E45C3B7965A9A90FE86EDB3978EA1BD863C01D66D5EA11FC08E2E216ACE658E2EFC10F4AA0D31AAA437EB8DDFF1468CEB8CF186B9B0CC00822BE4DD14B732D15DE2572B97C7B9C07B1D7434FE9319D7EEC07EEA7EE4F82E799E9F51AA30C5FC29FC8B8E8FF103C24CFEAA5237C9BD76D0F41BEEE60865935DC8AA35E5896048EDEDB6B1DC84CEC2305CE742184EECE5F804905A075E0A4CD87AD1C61CB222392CD8A769BF959B5592D37D3410D234144CE960BDB5DB23C1B98C6738
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Menlo-Regular cguidfix
/F2.1/Menlo-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 562 205 rc
172.72223 204.34424 m
293.72223 204.34424 l
298.69278 204.34424 302.72223 200.3148 302.72223 195.34424 c
302.72223 93.678162 l
302.72223 88.707603 298.69278 84.678162 293.72223 84.678162 c
172.72223 84.678162 l
167.75166 84.678162 163.72223 88.707603 163.72223 93.678162 c
163.72223 195.34424 l
163.72223 200.3148 167.75166 204.34424 172.72223 204.34424 c
h
172.72223 204.34424 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
363.72223 621.65576 m
484.72223 621.65576 l
489.69278 621.65576 493.72223 625.68518 493.72223 630.65576 c
493.72223 732.32184 l
493.72223 737.29242 489.69278 741.32184 484.72223 741.32184 c
363.72223 741.32184 l
358.75165 741.32184 354.72223 737.29242 354.72223 732.32184 c
354.72223 630.65576 l
354.72223 625.68518 358.75165 621.65576 363.72223 621.65576 c
h
363.72223 621.65576 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
359.72223 637.65576 m
(!"#"$%&')[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
398.9361 729.21008 m
(!"#$%!&)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
409.77301 699.98395 m
('%"&)[ 7.224609 7.224609 7.224609 0.000000 ] xS
370.03766 670.75781 m
("\(\)*!"#$%!&+,+-)[ 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 189.1041 m
112 189.1041 l
116.97057 189.1041 121 185.07466 121 180.1041 c
121 133.1041 l
121 128.13353 116.97057 124.10409 112 124.10409 c
10 124.10409 l
5.0294371 124.10409 1 128.13353 1 133.1041 c
1 180.1041 l
1 185.07466 5.0294371 189.1041 10 189.1041 c
h
10 189.1041 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
201 636.89594 m
303 636.89594 l
307.97055 636.89594 312 640.92535 312 645.89594 c
312 692.89594 l
312 697.86646 307.97055 701.89594 303 701.89594 c
201 701.89594 l
196.02943 701.89594 192 697.86646 192 692.89594 c
192 645.89594 l
192 640.92535 196.02943 636.89594 201 636.89594 c
h
201 636.89594 m
S
/Cs2 SC
0 sc
0 i
/F1.1[ 12 0 0 -12 0 0]sf
197 652.89594 m
(\(\)$!*)[ 7.224609 7.224609 7.224609 7.224609 0.000000 ] xS
/F2.1[ 12 0 0 -12 0 0]sf
244.77539 683.08716 m
(&#)[ 7.224609 0.000000 ] xS
2 w
0 j
0.60000002 i
/Cs1 SC
0 0 0 sc
261.88623 680.15198 m
341.82224 680.15198 l
S
0 i
CM
160.42223 145.84802 m
150.82222 149.44801 l
150.82222 142.24802 l
h
160.42223 145.84802 m
f
0 J
1 0 0 -1 -191 826 cm
351.42221 680.15198 m
341.82224 676.552 l
341.82224 683.75195 l
h
351.42221 680.15198 m
S
1 w
1 J
0.60000002 i
354.72223 652.53076 m
493.72223 652.53076 l
S
355.62222 679.89258 m
493.8223 679.89258 l
S
355.72208 712.21008 m
493.8223 712.21008 l
S
0 i
1 1 1 sc
CM
320.42145 138.65256 m
342.43082 138.65256 l
342.43082 120.24474 l
320.42145 120.24474 l
h
320.42145 138.65256 m
f
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
511.42145 687.34741 m
533.43079 687.34741 l
533.43079 705.75525 l
511.42145 705.75525 l
h
511.42145 687.34741 m
S
0 i
1 1 1 sc
CM
342.43082 138.65256 m
364.44016 138.65256 l
364.44016 120.24474 l
342.43082 120.24474 l
h
342.43082 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
533.43079 687.34741 m
555.44019 687.34741 l
555.44019 705.75525 l
533.43079 705.75525 l
h
533.43079 687.34741 m
S
0 i
1 1 1 sc
CM
364.44016 138.65256 m
386.44952 138.65256 l
386.44952 120.24474 l
364.44016 120.24474 l
h
364.44016 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
555.44019 687.34741 m
577.44952 687.34741 l
577.44952 705.75525 l
555.44019 705.75525 l
h
555.44019 687.34741 m
S
0 i
1 1 1 sc
CM
386.44952 138.65256 m
408.45889 138.65256 l
408.45889 120.24474 l
386.44952 120.24474 l
h
386.44952 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
577.44952 687.34741 m
599.45886 687.34741 l
599.45886 705.75525 l
577.44952 705.75525 l
h
577.44952 687.34741 m
S
0 i
1 1 1 sc
CM
408.43082 138.65256 m
430.44016 138.65256 l
430.44016 120.24474 l
408.43082 120.24474 l
h
408.43082 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
599.43079 687.34741 m
621.44019 687.34741 l
621.44019 705.75525 l
599.43079 705.75525 l
h
599.43079 687.34741 m
S
0 i
1 1 1 sc
CM
430.44016 138.65256 m
452.44952 138.65256 l
452.44952 120.24474 l
430.44016 120.24474 l
h
430.44016 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
621.44019 687.34741 m
643.44952 687.34741 l
643.44952 705.75525 l
621.44019 705.75525 l
h
621.44019 687.34741 m
S
0 i
1 1 1 sc
CM
452.44952 138.65256 m
474.45889 138.65256 l
474.45889 120.24474 l
452.44952 120.24474 l
h
452.44952 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
643.44952 687.34741 m
665.45886 687.34741 l
665.45886 705.75525 l
643.44952 705.75525 l
h
643.44952 687.34741 m
S
0 i
1 1 1 sc
CM
474.44952 138.65256 m
496.45889 138.65256 l
496.45889 120.24474 l
474.44952 120.24474 l
h
474.44952 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
665.44952 687.34741 m
687.45886 687.34741 l
687.45886 705.75525 l
665.44952 705.75525 l
h
665.44952 687.34741 m
S
2 w
0 j
443.67145 695.84741 m
498.52145 695.84741 l
S
0 i
CM
317.12143 130.15256 m
307.52145 133.75256 l
307.52145 126.55257 l
h
317.12143 130.15256 m
f
0 J
1 0 0 -1 -191 826 cm
508.12143 695.84741 m
498.52145 692.24744 l
498.52145 699.44745 l
h
508.12143 695.84741 m
S
1 J
0.60000002 i
423.83273 735.5 m
423.83273 778.9043 l
S
0 i
CM
232.83273 37.495731 m
236.43274 47.095734 l
229.23273 47.095734 l
h
232.83273 37.495731 m
f
0 J
1 0 0 -1 -191 826 cm
423.83273 788.50427 m
427.43274 778.9043 l
420.23273 778.9043 l
h
423.83273 788.50427 m
S
1 1 1 sc
CM
287.97992 34.195732 m
396.60519 34.195732 l
396.60519 0.70001602 l
287.97992 0.70001602 l
h
287.97992 34.195732 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
478.97992 791.80426 m
587.60522 791.80426 l
587.60522 825.29999 l
478.97992 825.29999 l
h
478.97992 791.80426 m
S
0 i
1 1 1 sc
CM
179.35464 34.195732 m
287.97992 34.195732 l
287.97992 0.70001602 l
179.35464 0.70001602 l
h
179.35464 34.195732 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
370.35464 791.80426 m
478.97992 791.80426 l
478.97992 825.29999 l
370.35464 825.29999 l
h
370.35464 791.80426 m
S
0 i
1 1 1 sc
CM
396.60519 34.195732 m
505.23047 34.195732 l
505.23047 0.70001602 l
396.60519 0.70001602 l
h
396.60519 34.195732 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
587.60522 791.80426 m
696.23047 791.80426 l
696.23047 825.29999 l
587.60522 825.29999 l
h
587.60522 791.80426 m
S
/Cs2 SC
0 sc
0 i
/F2.1[ 9 0 0 -9 0 0]sf
715.15363 699 m
(.#/000)[ 5.418457 5.418457 5.418457 5.418457 5.418457 0.000000 ] xS
715.15363 811.56818 m
(.#/000)[ 5.418457 5.418457 5.418457 5.418457 5.418457 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
496.46826 138.65256 m
518.4776 138.65256 l
518.4776 120.24474 l
496.46826 120.24474 l
h
496.46826 138.65256 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -191 826 cm
687.46826 687.34741 m
709.4776 687.34741 l
709.4776 705.75525 l
687.46826 705.75525 l
h
687.46826 687.34741 m
S
ep
end
%%Trailer
%%EOF
